/*
 * This file is generated by jOOQ.
 */
package cz.cleverfarm.interview.farmassignment.generated.tables.records;

import com.vividsolutions.jts.geom.Geometry;
import cz.cleverfarm.interview.farmassignment.generated.tables.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.OffsetDateTime;
import java.util.UUID;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FieldRecord extends UpdatableRecordImpl<FieldRecord>
    implements Record6<UUID, String, UUID, OffsetDateTime, OffsetDateTime, Geometry> {

  private static final long serialVersionUID = -1538411347;

  /** Setter for <code>public.field.id</code>. */
  public void setId(UUID value) {
    set(0, value);
  }

  /** Getter for <code>public.field.id</code>. */
  public UUID getId() {
    return (UUID) get(0);
  }

  /** Setter for <code>public.field.name</code>. */
  public void setName(String value) {
    set(1, value);
  }

  /** Getter for <code>public.field.name</code>. */
  public String getName() {
    return (String) get(1);
  }

  /** Setter for <code>public.field.farm_id</code>. */
  public void setFarmId(UUID value) {
    set(2, value);
  }

  /** Getter for <code>public.field.farm_id</code>. */
  public UUID getFarmId() {
    return (UUID) get(2);
  }

  /** Setter for <code>public.field.created_at</code>. */
  public void setCreatedAt(OffsetDateTime value) {
    set(3, value);
  }

  /** Getter for <code>public.field.created_at</code>. */
  public OffsetDateTime getCreatedAt() {
    return (OffsetDateTime) get(3);
  }

  /** Setter for <code>public.field.updated_at</code>. */
  public void setUpdatedAt(OffsetDateTime value) {
    set(4, value);
  }

  /** Getter for <code>public.field.updated_at</code>. */
  public OffsetDateTime getUpdatedAt() {
    return (OffsetDateTime) get(4);
  }

  /** Setter for <code>public.field.geom</code>. */
  public void setGeom(Geometry value) {
    set(5, value);
  }

  /** Getter for <code>public.field.geom</code>. */
  public Geometry getGeom() {
    return (Geometry) get(5);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row6<UUID, String, UUID, OffsetDateTime, OffsetDateTime, Geometry> fieldsRow() {
    return (Row6) super.fieldsRow();
  }

  @Override
  public Row6<UUID, String, UUID, OffsetDateTime, OffsetDateTime, Geometry> valuesRow() {
    return (Row6) super.valuesRow();
  }

  @Override
  public org.jooq.Field<UUID> field1() {
    return Field.FIELD.ID;
  }

  @Override
  public org.jooq.Field<String> field2() {
    return Field.FIELD.NAME;
  }

  @Override
  public org.jooq.Field<UUID> field3() {
    return Field.FIELD.FARM_ID;
  }

  @Override
  public org.jooq.Field<OffsetDateTime> field4() {
    return Field.FIELD.CREATED_AT;
  }

  @Override
  public org.jooq.Field<OffsetDateTime> field5() {
    return Field.FIELD.UPDATED_AT;
  }

  @Override
  public org.jooq.Field<Geometry> field6() {
    return Field.FIELD.GEOM;
  }

  @Override
  public UUID component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getName();
  }

  @Override
  public UUID component3() {
    return getFarmId();
  }

  @Override
  public OffsetDateTime component4() {
    return getCreatedAt();
  }

  @Override
  public OffsetDateTime component5() {
    return getUpdatedAt();
  }

  @Override
  public Geometry component6() {
    return getGeom();
  }

  @Override
  public UUID value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getName();
  }

  @Override
  public UUID value3() {
    return getFarmId();
  }

  @Override
  public OffsetDateTime value4() {
    return getCreatedAt();
  }

  @Override
  public OffsetDateTime value5() {
    return getUpdatedAt();
  }

  @Override
  public Geometry value6() {
    return getGeom();
  }

  @Override
  public FieldRecord value1(UUID value) {
    setId(value);
    return this;
  }

  @Override
  public FieldRecord value2(String value) {
    setName(value);
    return this;
  }

  @Override
  public FieldRecord value3(UUID value) {
    setFarmId(value);
    return this;
  }

  @Override
  public FieldRecord value4(OffsetDateTime value) {
    setCreatedAt(value);
    return this;
  }

  @Override
  public FieldRecord value5(OffsetDateTime value) {
    setUpdatedAt(value);
    return this;
  }

  @Override
  public FieldRecord value6(Geometry value) {
    setGeom(value);
    return this;
  }

  @Override
  public FieldRecord values(
      UUID value1,
      String value2,
      UUID value3,
      OffsetDateTime value4,
      OffsetDateTime value5,
      Geometry value6) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached FieldRecord */
  public FieldRecord() {
    super(Field.FIELD);
  }

  /** Create a detached, initialised FieldRecord */
  public FieldRecord(
      UUID id,
      String name,
      UUID farmId,
      OffsetDateTime createdAt,
      OffsetDateTime updatedAt,
      Geometry geom) {
    super(Field.FIELD);

    set(0, id);
    set(1, name);
    set(2, farmId);
    set(3, createdAt);
    set(4, updatedAt);
    set(5, geom);
  }
}
